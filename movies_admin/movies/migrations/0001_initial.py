# Generated by Django 3.2 on 2021-11-11 17:03

import uuid

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FilmWork',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('creation_date', models.DateField(blank=True, verbose_name='Creation date')),
                ('certificate', models.TextField(blank=True, verbose_name='Certificate')),
                ('file_path', models.FileField(blank=True, upload_to='film_works/', verbose_name='File')),
                ('rating', models.FloatField(blank=True, default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Rating')),
                ('type', models.CharField(choices=[('movie', 'movie'), ('tv_show', 'TV Show')], max_length=20, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Film',
                'verbose_name_plural': 'Films',
                'db_table': 'content"."film_work',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=25, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
                'db_table': 'content"."genre',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=128, verbose_name='Full name')),
                ('birth_date', models.DateField(blank=True, verbose_name='Birth date')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
                'db_table': 'content"."person',
            },
        ),
        migrations.CreateModel(
            name='FilmWorkPerson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('actor', 'actor'), ('director', 'director'), ('writer', 'writer')], max_length=15, verbose_name='type')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('film_work_id', models.ForeignKey(db_column='film_work_id', on_delete=django.db.models.deletion.CASCADE, to='movies.filmwork')),
                ('person_id', models.ForeignKey(db_column='person_id', on_delete=django.db.models.deletion.CASCADE, to='movies.person')),
            ],
            options={
                'verbose_name': 'Persons of film',
                'verbose_name_plural': 'Persons of film',
                'db_table': 'content"."person_film_work',
            },
        ),
        migrations.CreateModel(
            name='FilmWorkGenre',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('film_work_id', models.ForeignKey(db_column='film_work_id', on_delete=django.db.models.deletion.CASCADE, to='movies.filmwork')),
                ('genre_id', models.ForeignKey(db_column='genre_id', on_delete=django.db.models.deletion.CASCADE, to='movies.genre')),
            ],
            options={
                'verbose_name': 'Genres of film',
                'verbose_name_plural': 'Genres of film',
                'db_table': 'content"."genre_film_work',
            },
        ),
        migrations.AddField(
            model_name='filmwork',
            name='genres',
            field=models.ManyToManyField(through='movies.FilmWorkGenre', to='movies.Genre'),
        ),
        migrations.AddField(
            model_name='filmwork',
            name='persons',
            field=models.ManyToManyField(through='movies.FilmWorkPerson', to='movies.Person'),
        ),
        migrations.AddIndex(
            model_name='filmworkperson',
            index=models.Index(fields=['film_work_id', 'person_id', 'role'], name='id_person_role_index'),
        ),
        migrations.AlterUniqueTogether(
            name='filmworkperson',
            unique_together={('film_work_id', 'person_id', 'role')},
        ),
        migrations.AddIndex(
            model_name='filmworkgenre',
            index=models.Index(fields=['film_work_id', 'genre_id'], name='id_genre_film_work_index'),
        ),
        migrations.AlterUniqueTogether(
            name='filmworkgenre',
            unique_together={('film_work_id', 'genre_id')},
        ),
    ]
